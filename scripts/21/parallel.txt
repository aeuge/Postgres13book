-- cockroachDB in GCE
-- Создадим 3 VM - cockroach1, cockroach2, cockroach3
gcloud beta compute --project=celtic-house-266612 instances create cockroach1 --zone=us-central1-a --machine-type=e2-medium --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=933982307116-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform --image=ubuntu-2010-groovy-v20210119a --image-project=ubuntu-os-cloud --boot-disk-size=50GB --boot-disk-type=pd-ssd --boot-disk-device-name=cockroach1 --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any
gcloud beta compute --project=celtic-house-266612 instances create cockroach2 --zone=us-central1-a --machine-type=e2-medium --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=933982307116-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform --image=ubuntu-2010-groovy-v20210119a --image-project=ubuntu-os-cloud --boot-disk-size=50GB --boot-disk-type=pd-ssd --boot-disk-device-name=cockroach2 --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any
gcloud beta compute --project=celtic-house-266612 instances create cockroach3 --zone=us-central1-a --machine-type=e2-medium --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=933982307116-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform --image=ubuntu-2010-groovy-v20210119a --image-project=ubuntu-os-cloud --boot-disk-size=50GB --boot-disk-type=pd-ssd --boot-disk-device-name=cockroach3 --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any

gcloud compute ssh cockroach1
gcloud compute ssh cockroach2
gcloud compute ssh cockroach3

-- 21.1.6 stable
wget -qO- https://binaries.cockroachdb.com/cockroach-v21.1.6.linux-amd64.tgz | tar  xvz && sudo cp -i cockroach-v21.1.6.linux-amd64/cockroach /usr/local/bin/ && sudo mkdir -p /opt/cockroach && sudo chown aeugene:aeugene /opt/cockroach

-- стартуем ноды
-- --insecure OR generte certs
mkdir certs my-safe-directory
cockroach cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key
cockroach cert create-node localhost cockroach1 cockroach2 cockroach3 --certs-dir=certs --ca-key=my-safe-directory/ca.key --overwrite
cockroach cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key

-- list of certs
cockroach cert list --certs-dir=certs

-- on notebook
gcloud compute instances list
scp -r aeugene@34.135.114.75:/home/aeugene/certs /mnt/c/download
scp -r /mnt/c/download/certs aeugene@34.123.92.244:/home/aeugene
scp -r /mnt/c/download/certs aeugene@35.192.96.158:/home/aeugene



-- on node1
cockroach start --certs-dir=certs --advertise-addr=cockroach1 --join=cockroach1,cockroach2,cockroach3 --cache=.25 --max-sql-memory=.25 --background


-- on node2
chmod 700 certs/*
ls -l certs/
cockroach start --certs-dir=certs --advertise-addr=cockroach2 --join=cockroach1,cockroach2,cockroach3 --cache=.25 --max-sql-memory=.25 --background

-- on node 3
chmod 700 certs/*
cockroach start --certs-dir=certs --advertise-addr=cockroach3 --join=cockroach1,cockroach2,cockroach3 --cache=.25 --max-sql-memory=.25 --background

-- for more security
-- https://www.cockroachlabs.com/docs/v21.1/secure-a-cluster.html

-- logs
tail /home/aeugene/cockroach-data/logs/cockroach.log

-- инициализируем кластер
cockroach init --certs-dir=certs --host=cockroach1

-- status
cockroach node status --certs-dir=certs

-- зайдем клиентом
cockroach sql --certs-dir=certs

\l
> CREATE DATABASE bank;
> USE bank;
> CREATE TABLE if not exists items (itemname varchar(128) primary key, price decimal(19,4), quantity int);
> IMPORT INTO items (itemname, price, quantity) CSV DATA ('gs://postgres13/cockroachdb.csv') WITH DELIMITER = E'\t';

> SELECT * FROM items;

> CREATE TABLE test (
    Region VARCHAR(50),
    Country VARCHAR(50),
    ItemType VARCHAR(50),
    SalesChannel VARCHAR(20),
    OrderPriority VARCHAR(10),
    OrderDate VARCHAR(10),
    OrderID int,
    ShipDate VARCHAR(10),
    UnitsSold int,
    UnitPrice decimal(12,2),
    UnitCost decimal(12,2),
    TotalRevenue decimal(12,2),
    TotalCost decimal(12,2),
    TotalProfit decimal(12,2)
);
-- за сколько загрузится 1 000 000? 125Мб
IMPORT INTO test (Region,Country,ItemType,SalesChannel,OrderPriority,OrderDate,OrderID,ShipDate,UnitsSold,UnitPrice,UnitCost,TotalRevenue,TotalCost,TotalProfit) CSV DATA ('gs://postgres13/1000000SalesRecords.csv') WITH DELIMITER = ',', SKIP = '1';

> SELECT count(*) FROM test WHERE unitssold=124;
> CREATE index test_idx on test(unitssold);
> SELECT count(*) FROM test WHERE unitssold=124;

-- грохнем ноду
ps aux | grep cockroach| grep -Ev "grep"
sudo kill -9 2644

cockroach node status --certs-dir=certs



-- cockroachDB in GKE 

gcloud beta container --project "celtic-house-266612" clusters create "cockroachdb" --zone "us-central1-c" --no-enable-basic-auth --cluster-version "1.19.9-gke.1900" --release-channel "None" --machine-type "e2-medium" --image-type "COS_CONTAINERD" --disk-type "pd-ssd" --disk-size "30" --metadata disable-legacy-endpoints=true --max-pods-per-node "110" --preemptible --num-nodes "3" --enable-stackdriver-kubernetes --enable-ip-alias --network "projects/celtic-house-266612/global/networks/default" --subnetwork "projects/celtic-house-266612/regions/us-central1/subnetworks/default" --no-enable-intra-node-visibility --default-max-pods-per-node "110" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --enable-shielded-nodes --node-locations "us-central1-c"

NAME         LOCATION       MASTER_VERSION   MASTER_IP      MACHINE_TYPE  NODE_VERSION     NUM_NODES  STATUS
cockroachdb  us-central1-c  1.19.9-gke.1900  35.224.180.15  e2-medium     1.19.9-gke.1900  3          RUNNING

git clone https://github.com/cockroachdb/helm-charts
cd helm-charts/cockroachdb

-- 2 options
-- helm repo add cockroachdb https://charts.cockroachdb.com/
-- helm repo update

cat values.yaml
cat my_values.yaml -- заоверрайтит values.yaml

helm install cockroach . --values my_values.yaml

kubectl get all
kubectl get pv
-- какой под куда уехал
kubectl get all -o wide

kubectl run -it --rm cockroach-client --image=cockroachdb/cockroach --restart=Never --command -- ./cockroach sql --insecure --host=cockroach-cockroachdb-public.default



> show databases;
> CREATE DATABASE bank;
> USE bank;
-- делаем автоматическую генерацию UUID
> CREATE TABLE bank.accounts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
      balance DECIMAL
  );
> INSERT INTO bank.accounts (balance)
  VALUES
      (1000.50), (20000), (380), (500), (55000);
> SELECT * FROM bank.accounts;

kubectl port-forward cockroach-cockroachdb-0 8080
http://localhost:8080
-- иногда 2 из 3 развертывается - посмотрим аллоцированные ресурсы в браузере GCP
kubectl top node

-- пороняем ноды
kubectl get pods
kubectl delete pod cockroach-cockroachdb-2
-- посмотрим в вебинтерфейсе что с нодой

kubectl port-forward cockroach-cockroachdb-0 26257

psql -h localhost -p 26257 -U root
> show users;
> show TABLEs;
> show databases;
> use bank;
> SELECT * FROM bank.accounts;
> CREATE TABLE if not exists items (itemname varchar(128) primary key, price decimal(19,4), quantity int);
> import INTO items (itemname, price, quantity) CSV DATA ('gs://pg202101/cockroachdb.csv') WITH DELIMITER = E'\t';

> CREATE TABLE test (
    Region VARCHAR(50),
    Country VARCHAR(50),
    ItemType VARCHAR(50),
    SalesChannel VARCHAR(20),
    OrderPriority VARCHAR(10),
    OrderDate VARCHAR(10),
    OrderID int,
    ShipDate VARCHAR(10),
    UnitsSold int,
    UnitPrice decimal(12,2),
    UnitCost decimal(12,2),
    TotalRevenue decimal(12,2),
    TotalCost decimal(12,2),
    TotalProfit decimal(12,2)
);
> import INTO test (Region,Country,ItemType,SalesChannel,OrderPriority,OrderDate,OrderID,ShipDate,UnitsSold,UnitPrice,UnitCost,TotalRevenue,TotalCost,TotalProfit) CSV DATA ('gs://pg202101/100SalesRecords.csv') WITH DELIMITER = ',', SKIP = '1';


-- за сколько загрузится 1 000 000? 125Мб
> import INTO test (Region,Country,ItemType,SalesChannel,OrderPriority,OrderDate,OrderID,ShipDate,UnitsSold,UnitPrice,UnitCost,TotalRevenue,TotalCost,TotalProfit) CSV DATA ('gs://pg202101/1000000SalesRecords.csv') WITH DELIMITER = ',', SKIP = '1';

> SELECT count(*) FROM test WHERE unitssold=124;
> CREATE index test_idx on test(unitssold);

-- BACKUP
-- чтобы бэкап сработал, нужно создавать ноды с режимом доступа к CloudIP
BACKUP DATABASE bank TO 'gs://pg202101/database-bank-2017-03-27-weekly' AS OF SYSTEM TIME '-10s';
-- в файлы только enterprice
BACKUP DATABASE bank TO 'file://111.txt' AS OF SYSTEM TIME '-10s';


gcloud container clusters list
gcloud container clusters delete cockroachdb --zone us-central1-c

--посмотрим, что осталось от кластера


